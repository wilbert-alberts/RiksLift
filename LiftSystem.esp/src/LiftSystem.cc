// Generated by dzn code from LiftSystem.dzn
#include "LiftSystem.hh"
#include <dzn/locator.hh>
#include <dzn/runtime.hh>
#include <iterator>
#define STRINGIZING(x) #x
#define STR(x) STRINGIZING (x)
#define LOCATION __FILE__ ":" STR (__LINE__)
LiftSystem::LiftSystem (dzn::locator const& locator)
: dzn_meta ({"LiftSystem","LiftSystem",0,  {},  {},  {[this] ()
        {
          p.dzn_check_bindings ();
        }}})
, dzn_runtime (locator.get<dzn::runtime> ())
, dzn_locator (locator)
, mudArmor (dzn_locator)
, fLog (dzn_locator)
, mud (dzn_locator)
, smd (dzn_locator)
, smu (dzn_locator)
, hd (dzn_locator)
, rd (dzn_locator)
, hu (dzn_locator)
, ru (dzn_locator)
, ruFastDestinationSensor (dzn_locator)
, ruSlowDestinationSensor (dzn_locator)
, ruPositionSensor (dzn_locator)
, ruTimer (dzn_locator)
, ruPlanner (dzn_locator)
, ruMotor (dzn_locator)
, rdFastDestinationSensor (dzn_locator)
, rdSlowDestinationSensor (dzn_locator)
, rdPositionSensor (dzn_locator)
, rdTimer (dzn_locator)
, rdPlanner (dzn_locator)
, rdMotor (dzn_locator)
, huMotor (dzn_locator)
, huPlanner (dzn_locator)
, huPositionSensor (dzn_locator)
, huEndstop (dzn_locator)
, huTimer (dzn_locator)
, hdMotor (dzn_locator)
, hdPlanner (dzn_locator)
, hdPositionSensor (dzn_locator)
, hdEndstop (dzn_locator)
, hdTimer (dzn_locator)
, p (this->mudArmor.p)
{
  mudArmor.p.dzn_meta.require.name = "p";
  dzn_meta.require =   {};
  dzn_meta.children =   {&mudArmor.dzn_meta,&fLog.dzn_meta,&mud.dzn_meta,&smd.dzn_meta,&smu.dzn_meta,&hd.dzn_meta,&rd.dzn_meta,&hu.dzn_meta,&ru.dzn_meta,&ruFastDestinationSensor.dzn_meta,&ruSlowDestinationSensor.dzn_meta,&ruPositionSensor.dzn_meta,&ruTimer.dzn_meta,&ruPlanner.dzn_meta,&ruMotor.dzn_meta,&rdFastDestinationSensor.dzn_meta,&rdSlowDestinationSensor.dzn_meta,&rdPositionSensor.dzn_meta,&rdTimer.dzn_meta,&rdPlanner.dzn_meta,&rdMotor.dzn_meta,&huMotor.dzn_meta,&huPlanner.dzn_meta,&huPositionSensor.dzn_meta,&huEndstop.dzn_meta,&huTimer.dzn_meta,&hdMotor.dzn_meta,&hdPlanner.dzn_meta,&hdPositionSensor.dzn_meta,&hdEndstop.dzn_meta,&hdTimer.dzn_meta};
  mudArmor.dzn_meta.parent = &dzn_meta;
  mudArmor.dzn_meta.name = "mudArmor";
  fLog.dzn_meta.parent = &dzn_meta;
  fLog.dzn_meta.name = "fLog";
  mud.dzn_meta.parent = &dzn_meta;
  mud.dzn_meta.name = "mud";
  smd.dzn_meta.parent = &dzn_meta;
  smd.dzn_meta.name = "smd";
  smu.dzn_meta.parent = &dzn_meta;
  smu.dzn_meta.name = "smu";
  hd.dzn_meta.parent = &dzn_meta;
  hd.dzn_meta.name = "hd";
  rd.dzn_meta.parent = &dzn_meta;
  rd.dzn_meta.name = "rd";
  hu.dzn_meta.parent = &dzn_meta;
  hu.dzn_meta.name = "hu";
  ru.dzn_meta.parent = &dzn_meta;
  ru.dzn_meta.name = "ru";
  ruFastDestinationSensor.dzn_meta.parent = &dzn_meta;
  ruFastDestinationSensor.dzn_meta.name = "ruFastDestinationSensor";
  ruSlowDestinationSensor.dzn_meta.parent = &dzn_meta;
  ruSlowDestinationSensor.dzn_meta.name = "ruSlowDestinationSensor";
  ruPositionSensor.dzn_meta.parent = &dzn_meta;
  ruPositionSensor.dzn_meta.name = "ruPositionSensor";
  ruTimer.dzn_meta.parent = &dzn_meta;
  ruTimer.dzn_meta.name = "ruTimer";
  ruPlanner.dzn_meta.parent = &dzn_meta;
  ruPlanner.dzn_meta.name = "ruPlanner";
  ruMotor.dzn_meta.parent = &dzn_meta;
  ruMotor.dzn_meta.name = "ruMotor";
  rdFastDestinationSensor.dzn_meta.parent = &dzn_meta;
  rdFastDestinationSensor.dzn_meta.name = "rdFastDestinationSensor";
  rdSlowDestinationSensor.dzn_meta.parent = &dzn_meta;
  rdSlowDestinationSensor.dzn_meta.name = "rdSlowDestinationSensor";
  rdPositionSensor.dzn_meta.parent = &dzn_meta;
  rdPositionSensor.dzn_meta.name = "rdPositionSensor";
  rdTimer.dzn_meta.parent = &dzn_meta;
  rdTimer.dzn_meta.name = "rdTimer";
  rdPlanner.dzn_meta.parent = &dzn_meta;
  rdPlanner.dzn_meta.name = "rdPlanner";
  rdMotor.dzn_meta.parent = &dzn_meta;
  rdMotor.dzn_meta.name = "rdMotor";
  huMotor.dzn_meta.parent = &dzn_meta;
  huMotor.dzn_meta.name = "huMotor";
  huPlanner.dzn_meta.parent = &dzn_meta;
  huPlanner.dzn_meta.name = "huPlanner";
  huPositionSensor.dzn_meta.parent = &dzn_meta;
  huPositionSensor.dzn_meta.name = "huPositionSensor";
  huEndstop.dzn_meta.parent = &dzn_meta;
  huEndstop.dzn_meta.name = "huEndstop";
  huTimer.dzn_meta.parent = &dzn_meta;
  huTimer.dzn_meta.name = "huTimer";
  hdMotor.dzn_meta.parent = &dzn_meta;
  hdMotor.dzn_meta.name = "hdMotor";
  hdPlanner.dzn_meta.parent = &dzn_meta;
  hdPlanner.dzn_meta.name = "hdPlanner";
  hdPositionSensor.dzn_meta.parent = &dzn_meta;
  hdPositionSensor.dzn_meta.name = "hdPositionSensor";
  hdEndstop.dzn_meta.parent = &dzn_meta;
  hdEndstop.dzn_meta.name = "hdEndstop";
  hdTimer.dzn_meta.parent = &dzn_meta;
  hdTimer.dzn_meta.name = "hdTimer";
  dzn::connect (this->fLog.p, this->mudArmor.rLog);
  dzn::connect (this->mud.p, this->mudArmor.r);
  dzn::connect (this->smd.p, this->mud.rDown);
  dzn::connect (this->smu.p, this->mud.rUp);
  dzn::connect (this->rd.p, this->smd.regularMove);
  dzn::connect (this->hd.p, this->smd.homedMove);
  dzn::connect (this->ru.p, this->smu.regularMove);
  dzn::connect (this->hu.p, this->smu.homedMove);
  dzn::connect (this->ruMotor.p, this->ru.motor);
  dzn::connect (this->ruTimer.p, this->ru.timer);
  dzn::connect (this->ruPositionSensor.p, this->ru.positionSensor);
  dzn::connect (this->ruFastDestinationSensor.p, this->ru.fastDestinationSensor);
  dzn::connect (this->ruSlowDestinationSensor.p, this->ru.slowDestinationSensor);
  dzn::connect (this->ruPlanner.p, this->ru.planner);
  dzn::connect (this->rdMotor.p, this->rd.motor);
  dzn::connect (this->rdTimer.p, this->rd.timer);
  dzn::connect (this->rdPositionSensor.p, this->rd.positionSensor);
  dzn::connect (this->rdFastDestinationSensor.p, this->rd.fastDestinationSensor);
  dzn::connect (this->rdSlowDestinationSensor.p, this->rd.slowDestinationSensor);
  dzn::connect (this->rdPlanner.p, this->rd.planner);
  dzn::connect (this->huMotor.p, this->hu.motor);
  dzn::connect (this->huTimer.p, this->hu.timer);
  dzn::connect (this->huEndstop.p, this->hu.endstop);
  dzn::connect (this->huPositionSensor.p, this->hu.positionSensor);
  dzn::connect (this->huPlanner.p, this->hu.planner);
  dzn::connect (this->hdMotor.p, this->hd.motor);
  dzn::connect (this->hdTimer.p, this->hd.timer);
  dzn::connect (this->hdEndstop.p, this->hd.endstop);
  dzn::connect (this->hdPositionSensor.p, this->hd.positionSensor);
  dzn::connect (this->hdPlanner.p, this->hd.planner);
}
// version 2.18.2
