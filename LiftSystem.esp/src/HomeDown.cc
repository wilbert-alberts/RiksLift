// Generated by dzn code from HomeDown.dzn
#include "HomeDown.hh"
#include <dzn/locator.hh>
#include <dzn/runtime.hh>
#include <iterator>
#define STRINGIZING(x) #x
#define STR(x) STRINGIZING (x)
#define LOCATION __FILE__ ":" STR (__LINE__)
HomeDown::HomeDown (dzn::locator const& locator)
: dzn_meta ({"HomeDown","HomeDown",0,  {},  {},  {[this] ()
        {
          p.dzn_check_bindings ();
        }, [this] ()
        {
          timer.dzn_check_bindings ();
        }, [this] ()
        {
          endstop.dzn_check_bindings ();
        }, [this] ()
        {
          motor.dzn_check_bindings ();
        }, [this] ()
        {
          positionSensor.dzn_check_bindings ();
        }, [this] ()
        {
          planner.dzn_check_bindings ();
        }}})
, dzn_runtime (locator.get<dzn::runtime> ())
, dzn_locator (locator)
, state (::HomeDown::State::IDLE)
, es (::IEndstop::State::UNKNOWN)
, p ({  {"p",&p,this,&dzn_meta},  {"p",0,0,0}},this)
, timer ({  {"timer",0,0,0},  {"timer",&timer,this,&dzn_meta}},this)
, endstop ({  {"endstop",0,0,0},  {"endstop",&endstop,this,&dzn_meta}},this)
, motor ({  {"motor",0,0,0},  {"motor",&motor,this,&dzn_meta}},this)
, positionSensor ({  {"positionSensor",0,0,0},  {"positionSensor",&positionSensor,this,&dzn_meta}},this)
, planner ({  {"planner",0,0,0},  {"planner",&planner,this,&dzn_meta}},this)
{
  this->dzn_meta.require =   {&timer.dzn_meta,&endstop.dzn_meta,&motor.dzn_meta,&positionSensor.dzn_meta,&planner.dzn_meta};
  this->dzn_runtime.performs_flush (this) = true;
  this->p.in.moveDown = [this] ()
    {
      this->dzn_out_p = &this->p.in.moveDown.dzn_out_binding;
      this->p_moveDown ();
    };
  this->p.in.abort = [this] ()
    {
      this->dzn_out_p = &this->p.in.abort.dzn_out_binding;
      this->p_abort ();
    };
  this->timer.out.timerElapsed = [this] ()
    {
      this->timer_timerElapsed ();
    };
  this->endstop.out.entering = [this] ()
    {
      this->endstop_entering ();
    };
  this->endstop.out.exiting = [this] ()
    {
      this->endstop_exiting ();
    };
}
void
HomeDown::p_moveDown ()
{
  if (this->state == ::HomeDown::State::IDLE)
    {
      this->es = this->endstop.in.getState ();
      if (this->es == ::IEndstop::State::INSIDE)
        {
          this->timer.in.setTimer (Delay(HOMING_MOVING_SLOW_OUT));
          this->motor.in.moveUpSlow ();
          this->state = ::HomeDown::State::MOVING_SLOW_OUT;
        }
      else if (this->es == ::IEndstop::State::OUTSIDE)
        {
          this->timer.in.setTimer (Delay(HOMING_MOVING_FAST_IN));
          this->motor.in.moveDownFast ();
          this->state = ::HomeDown::State::MOVING_FAST_IN;
        }
    }
  else if (!(this->state == ::HomeDown::State::IDLE)) this->dzn_locator.get<dzn::illegal_handler> ().handle (LOCATION);
  else this->dzn_locator.get<dzn::illegal_handler> ().handle (LOCATION);
}
void
HomeDown::p_abort ()
{
  if ((this->state == ::HomeDown::State::MOVING_FAST_IN) || ((this->state == ::HomeDown::State::MOVING_SLOW_OUT) || (this->state == ::HomeDown::State::MOVING_SLOW_IN)))
    {
      this->timer.in.cancelTimer ();
      this->motor.in.stop ();
      this->timer.in.setTimer (Delay(HOMING_ABORTING));
      this->state = ::HomeDown::State::ABORTING;
    }
  else if ((this->state == ::HomeDown::State::STOPPING_FAST_IN) || ((this->state == ::HomeDown::State::STOPPING_SLOW_IN) || ((this->state == ::HomeDown::State::STOPPING_SLOW_OUT) || (this->state == ::HomeDown::State::MOVING_SLOW_EXTRA_OUT))))
    {
      this->state = ::HomeDown::State::ABORTING;
    }
  else if (this->state == ::HomeDown::State::FAILING_STOPPING)
    {
      this->state = ::HomeDown::State::ABORTING;
    }
  else if (!(this->state == ::HomeDown::State::FAILING_STOPPING) && (!((this->state == ::HomeDown::State::STOPPING_FAST_IN) || ((this->state == ::HomeDown::State::STOPPING_SLOW_IN) || ((this->state == ::HomeDown::State::STOPPING_SLOW_OUT) || (this->state == ::HomeDown::State::MOVING_SLOW_EXTRA_OUT)))) && !((this->state == ::HomeDown::State::MOVING_FAST_IN) || ((this->state == ::HomeDown::State::MOVING_SLOW_OUT) || (this->state == ::HomeDown::State::MOVING_SLOW_IN))))) this->dzn_locator.get<dzn::illegal_handler> ().handle (LOCATION);
  else this->dzn_locator.get<dzn::illegal_handler> ().handle (LOCATION);
}
void
HomeDown::timer_timerElapsed ()
{
  if (this->state == ::HomeDown::State::STOPPING_FAST_IN)
    {
      this->timer.in.setTimer (Delay(HOMING_MOVING_SLOW_OUT));
      this->motor.in.moveUpSlow ();
      this->state = ::HomeDown::State::MOVING_SLOW_OUT;
    }
  else if (this->state == ::HomeDown::State::MOVING_SLOW_EXTRA_OUT)
    {
      this->motor.in.stop ();
      this->timer.in.setTimer (Delay(HOMING_STOPPING_SLOW_OUT));
      this->state = ::HomeDown::State::STOPPING_SLOW_OUT;
    }
  else if (this->state == ::HomeDown::State::STOPPING_SLOW_OUT)
    {
      this->motor.in.moveDownSlow ();
      this->timer.in.setTimer (Delay(HOMING_MOVING_SLOW_IN));
      this->state = ::HomeDown::State::MOVING_SLOW_IN;
    }
  else if (this->state == ::HomeDown::State::STOPPING_SLOW_IN)
    {
      this->p.out.moveFinished ();
      this->state = ::HomeDown::State::IDLE;
    }
  else if ((this->state == ::HomeDown::State::MOVING_FAST_IN) || ((this->state == ::HomeDown::State::MOVING_SLOW_OUT) || (this->state == ::HomeDown::State::MOVING_SLOW_IN)))
    {
      this->motor.in.stop ();
      this->timer.in.setTimer (Delay(HOMING_FAILING_STOPPING));
      this->state = ::HomeDown::State::FAILING_STOPPING;
    }
  else if (this->state == ::HomeDown::State::FAILING_STOPPING)
    {
      this->p.out.moveFailed ();
      this->state = ::HomeDown::State::IDLE;
    }
  else if (this->state == ::HomeDown::State::ABORTING)
    {
      this->p.out.moveAborted ();
      this->state = ::HomeDown::State::IDLE;
    }
  else if (!(this->state == ::HomeDown::State::ABORTING) && (!(this->state == ::HomeDown::State::FAILING_STOPPING) && (!((this->state == ::HomeDown::State::MOVING_FAST_IN) || ((this->state == ::HomeDown::State::MOVING_SLOW_OUT) || (this->state == ::HomeDown::State::MOVING_SLOW_IN))) && (!(this->state == ::HomeDown::State::STOPPING_SLOW_IN) && (!(this->state == ::HomeDown::State::STOPPING_SLOW_OUT) && (!(this->state == ::HomeDown::State::MOVING_SLOW_EXTRA_OUT) && !(this->state == ::HomeDown::State::STOPPING_FAST_IN))))))) this->dzn_locator.get<dzn::illegal_handler> ().handle (LOCATION);
  else this->dzn_locator.get<dzn::illegal_handler> ().handle (LOCATION);
}
void
HomeDown::endstop_entering ()
{
  if (this->state == ::HomeDown::State::MOVING_FAST_IN)
    {
      this->motor.in.stop ();
      this->timer.in.cancelTimer ();
      this->timer.in.setTimer (Delay(HOMING_STOPPING_FAST_IN));
      this->state = ::HomeDown::State::STOPPING_FAST_IN;
    }
  else if (this->state == ::HomeDown::State::MOVING_SLOW_IN)
    {
      this->timer.in.cancelTimer ();
      this->motor.in.stop ();
      this->timer.in.setTimer (Delay(HOMING_STOPPING_SLOW_IN));
      this->positionSensor.in.getLastEndstopPosition (this->position);
      this->planner.in.setEndstopUpPosition (this->position);
      this->state = ::HomeDown::State::STOPPING_SLOW_IN;
    }
  else if (this->state == ::HomeDown::State::ABORTING)   {}
  else if ((this->state == ::HomeDown::State::STOPPING_SLOW_OUT) || ((this->state == ::HomeDown::State::STOPPING_FAST_IN) || ((this->state == ::HomeDown::State::STOPPING_SLOW_IN) || ((this->state == ::HomeDown::State::MOVING_SLOW_OUT) || ((this->state == ::HomeDown::State::MOVING_SLOW_EXTRA_OUT) || (this->state == ::HomeDown::State::IDLE))))))   {}
  else if (this->state == ::HomeDown::State::FAILING_STOPPING)   {}
  else if (!(this->state == ::HomeDown::State::FAILING_STOPPING) && (!((this->state == ::HomeDown::State::STOPPING_SLOW_OUT) || ((this->state == ::HomeDown::State::STOPPING_FAST_IN) || ((this->state == ::HomeDown::State::STOPPING_SLOW_IN) || ((this->state == ::HomeDown::State::MOVING_SLOW_OUT) || ((this->state == ::HomeDown::State::MOVING_SLOW_EXTRA_OUT) || (this->state == ::HomeDown::State::IDLE)))))) && (!(this->state == ::HomeDown::State::ABORTING) && (!(this->state == ::HomeDown::State::MOVING_SLOW_IN) && !(this->state == ::HomeDown::State::MOVING_FAST_IN))))) this->dzn_locator.get<dzn::illegal_handler> ().handle (LOCATION);
  else this->dzn_locator.get<dzn::illegal_handler> ().handle (LOCATION);
}
void
HomeDown::endstop_exiting ()
{
  if (this->state == ::HomeDown::State::MOVING_SLOW_OUT)
    {
      this->timer.in.cancelTimer ();
      this->timer.in.setTimer (Delay(HOMING_MOVING_EXTRA_OUT));
      this->state = ::HomeDown::State::MOVING_SLOW_EXTRA_OUT;
    }
  else if (this->state == ::HomeDown::State::ABORTING)   {}
  else if ((this->state == ::HomeDown::State::IDLE) || ((this->state == ::HomeDown::State::STOPPING_SLOW_OUT) || ((this->state == ::HomeDown::State::MOVING_SLOW_IN) || ((this->state == ::HomeDown::State::MOVING_SLOW_EXTRA_OUT) || ((this->state == ::HomeDown::State::STOPPING_SLOW_IN) || (this->state == ::HomeDown::State::STOPPING_FAST_IN))))))   {}
  else if (this->state == ::HomeDown::State::FAILING_STOPPING)   {}
  else if (!(this->state == ::HomeDown::State::FAILING_STOPPING) && (!((this->state == ::HomeDown::State::IDLE) || ((this->state == ::HomeDown::State::STOPPING_SLOW_OUT) || ((this->state == ::HomeDown::State::MOVING_SLOW_IN) || ((this->state == ::HomeDown::State::MOVING_SLOW_EXTRA_OUT) || ((this->state == ::HomeDown::State::STOPPING_SLOW_IN) || (this->state == ::HomeDown::State::STOPPING_FAST_IN)))))) && (!(this->state == ::HomeDown::State::ABORTING) && !(this->state == ::HomeDown::State::MOVING_SLOW_OUT)))) this->dzn_locator.get<dzn::illegal_handler> ().handle (LOCATION);
  else this->dzn_locator.get<dzn::illegal_handler> ().handle (LOCATION);
}
// version 2.18.2
