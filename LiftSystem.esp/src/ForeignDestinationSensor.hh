// Generated by dzn code from ForeignDestinationSensor.dzn
#include <dzn/runtime.hh>
namespace dzn
{
  struct locator;
  struct runtime;
}
#include <iostream>
#include <vector>
#include <map>
#include "IDestinationSensor.hh"
#ifndef SKEL_FDESTINATIONSENSOR_HH
#define SKEL_FDESTINATIONSENSOR_HH
#include "IDestinationSensor.hh"
namespace skel
{
  struct FDestinationSensor: public dzn::component
    {
      dzn::meta dzn_meta;
      dzn::runtime& dzn_runtime;
      dzn::locator const& dzn_locator;
      std::function<void ()>* dzn_out_p;
      ::IDestinationSensor p;
      FDestinationSensor (dzn::locator const& locator);
      virtual ~FDestinationSensor ();
      protected:
      void p_destinationReached ();
      private:
      virtual void p_setDestination (Position posInM) = 0;
      virtual void p_cancelDestination () = 0;
    };
}
#endif // SKEL_FDESTINATIONSENSOR_HH
// version 2.18.2
