// Generated by dzn code from ForeignPlanner.dzn
#include <dzn/runtime.hh>
namespace dzn
{
  struct locator;
  struct runtime;
}
#include <iostream>
#include <vector>
#include <map>
#include "IPlanner.hh"
#ifndef SKEL_FPLANNER_HH
#define SKEL_FPLANNER_HH
#include "IPlanner.hh"
namespace skel
{
  struct FPlanner: public dzn::component
    {
      dzn::meta dzn_meta;
      dzn::runtime& dzn_runtime;
      dzn::locator const& dzn_locator;
      std::function<void ()>* dzn_out_p;
      ::IPlanner p;
      FPlanner (dzn::locator const& locator);
      virtual ~FPlanner ();
      protected:
      private:
      virtual void p_getMoveUpFastPlanning (Position current, Delay d, Position p) = 0;
      virtual void p_getMoveUpSlowPlanning (Position current, Delay d, Position p) = 0;
      virtual void p_getMoveDownFastPlanning (Position current, Delay d, Position p) = 0;
      virtual void p_getMoveDownSlowPlanning (Position current, Delay d, Position p) = 0;
      virtual void p_setEndstopUpPosition (Position p) = 0;
      virtual void p_setEndstopDownPosition (Position p) = 0;
    };
}
#endif // SKEL_FPLANNER_HH
// version 2.18.2
