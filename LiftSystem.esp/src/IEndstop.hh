// Generated by dzn code from IEndstop.dzn
#include <dzn/runtime.hh>
namespace dzn
{
  struct locator;
  struct runtime;
}
#include <iostream>
#include <vector>
#include <map>
#ifndef IENDSTOP_HH
#define IENDSTOP_HH
struct IEndstop
{
  enum struct State
    {
      UNKNOWN,INSIDE,INSIDE_EXPECTING,OUTSIDE,OUTSIDE_EXPECTING
    };
  dzn::port::meta dzn_meta;
  struct
    {
      dzn::in::event<::IEndstop::State ()> getState;
    } in;
  struct
    {
      dzn::out::event<void ()> entering;
      dzn::out::event<void ()> exiting;
    } out;
  bool dzn_share_p;
  char const* dzn_label;
  int dzn_state;
  ::IEndstop::State state;
  IEndstop (dzn::port::meta const& m);
  template <typename Component>
  IEndstop (dzn::port::meta const& m, Component* that)
  : dzn_meta (m)
  , dzn_share_p (true)
  , dzn_label ("")
  , dzn_state ()
  , state (::IEndstop::State::UNKNOWN)
    {
      out.entering.set (that, this, "entering");
      out.exiting.set (that, this, "exiting");
      in.getState.set (that, this, "getState");
    }
  virtual ~IEndstop ();
  void dzn_event (char const* event);
  void dzn_update_state (dzn::locator const& locator);
  void dzn_check_bindings ();
};
namespace dzn
{
  inline void connect (::IEndstop& provide, ::IEndstop& require)
    {
      provide.out.entering = require.out.entering;
      provide.out.exiting = require.out.exiting;
      require.in.getState = provide.in.getState;
      provide.dzn_meta.require = require.dzn_meta.require;
      require.dzn_meta.provide = provide.dzn_meta.provide;
      provide.dzn_share_p = require.dzn_share_p = provide.dzn_share_p && require.dzn_share_p;
    }
}
namespace dzn
{
  char const* to_cstr (::IEndstop::State v);
  template <>
  std::string to_string (::IEndstop::State v);
}
template <typename Char, typename Traits>
std::basic_ostream<Char, Traits> & operator << (std::basic_ostream<Char, Traits>& os, ::IEndstop::State v)
{
  return os << dzn::to_cstr (v);
}
namespace dzn
{
  ::IEndstop::State to_IEndstop_State (std::string s);
}
#endif // IENDSTOP_HH
// version 2.18.2
