// Generated by dzn code from IPlanner.dzn
#include "IPlanner.hh"
#include <dzn/locator.hh>
#include <dzn/runtime.hh>
#include <iterator>
#define STRINGIZING(x) #x
#define STR(x) STRINGIZING (x)
#define LOCATION __FILE__ ":" STR (__LINE__)
IPlanner::IPlanner (dzn::port::meta const& m)
: dzn_meta (m)
, dzn_share_p (true)
, dzn_label ("")
, dzn_state ()
{}
IPlanner::~IPlanner ()= default;
void
IPlanner::dzn_event (char const* event)
{
  if (!dzn_share_p) return;
  dzn_label = event;
}
void
IPlanner::dzn_update_state (dzn::locator const& locator)
{
  if (!dzn_share_p || !dzn_label) return;
  switch (dzn::hash (dzn_label, dzn_state))
    {
      case 3853967394u:
      //0:getMoveDownFastPlanning
      dzn_state = 1;
      break;
      case 3118696983u:
      //0:getMoveDownSlowPlanning
      dzn_state = 1;
      break;
      case 490793771u:
      //0:getMoveUpFastPlanning
      dzn_state = 1;
      break;
      case 1046730048u:
      //0:getMoveUpSlowPlanning
      dzn_state = 1;
      break;
      case 3283330969u:
      //0:setEndstopDownPosition
      dzn_state = 1;
      break;
      case 1416084480u:
      //0:setEndstopUpPosition
      dzn_state = 1;
      break;
      case 632232382u:
      //1:return
      dzn_state = 0;
      break;
      default: locator.get<dzn::illegal_handler> ().handle (LOCATION);
    }
}
void
IPlanner::dzn_check_bindings ()
{
  if (!this->in.getMoveUpFastPlanning) throw dzn::binding_error (this->dzn_meta, "in.getMoveUpFastPlanning");
  if (!this->in.getMoveUpSlowPlanning) throw dzn::binding_error (this->dzn_meta, "in.getMoveUpSlowPlanning");
  if (!this->in.getMoveDownFastPlanning) throw dzn::binding_error (this->dzn_meta, "in.getMoveDownFastPlanning");
  if (!this->in.getMoveDownSlowPlanning) throw dzn::binding_error (this->dzn_meta, "in.getMoveDownSlowPlanning");
  if (!this->in.setEndstopUpPosition) throw dzn::binding_error (this->dzn_meta, "in.setEndstopUpPosition");
  if (!this->in.setEndstopDownPosition) throw dzn::binding_error (this->dzn_meta, "in.setEndstopDownPosition");
}
namespace dzn
{
}
// version 2.18.2
