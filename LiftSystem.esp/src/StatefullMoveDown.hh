// Generated by dzn code from StatefullMoveDown.dzn
#include <dzn/runtime.hh>
namespace dzn
{
  struct locator;
  struct runtime;
}
#include <iostream>
#include <vector>
#include <map>
#include "ITimer.hh"
#include "IMotor.hh"
#include "IDestinationSensor.hh"
#include "IPlanner.hh"
#include "IMoveDown.hh"
#ifndef SMOVEDOWN_HH
#define SMOVEDOWN_HH
#include "IMoveDown.hh"
struct SMoveDown: public dzn::component
{
  enum struct HomedState
    {
      NOT_HOMED,HOMED
    };
  enum struct MoveState
    {
      IDLE,MOVING,ABORTING
    };
  dzn::meta dzn_meta;
  dzn::runtime& dzn_runtime;
  dzn::locator const& dzn_locator;
  ::SMoveDown::HomedState homedState;
  ::SMoveDown::MoveState moveState;
  std::function<void ()>* dzn_out_p;
  ::IMoveDown p;
  ::IMoveDown homedMove;
  ::IMoveDown regularMove;
  SMoveDown (dzn::locator const& locator);
  private:
  void p_moveDown ();
  void p_abort ();
  void homedMove_moveFinished ();
  void homedMove_moveAborted ();
  void homedMove_moveFailed ();
  void regularMove_moveFinished ();
  void regularMove_moveAborted ();
  void regularMove_moveFailed ();
};
#endif // SMOVEDOWN_HH
// version 2.18.2
