// Generated by dzn code from MoveDown.dzn
#include <dzn/runtime.hh>
namespace dzn
{
  struct locator;
  struct runtime;
}
#include <iostream>
#include <vector>
#include <map>
#include "ITimer.hh"
#include "IMotor.hh"
#include "IDestinationSensor.hh"
#include "IPlanner.hh"
#include "IPositionSensor.hh"
#include "IMoveDown.hh"
#ifndef MOVEDOWN_HH
#define MOVEDOWN_HH
#include "IMoveDown.hh"
#include "ITimer.hh"
#include "IDestinationSensor.hh"
#include "IPositionSensor.hh"
#include "IMotor.hh"
#include "IPlanner.hh"
struct MoveDown: public dzn::component
{
  enum struct State
    {
      IDLE,MOVING_FAST,MOVING_SLOW,STOPPING,ABORTING,FAILING_STOPPING,ABORTING_STOPPING
    };
  dzn::meta dzn_meta;
  dzn::runtime& dzn_runtime;
  dzn::locator const& dzn_locator;
  ::MoveDown::State state;
  Delay slowDelay;
  Position slowPosition;
  Delay fastDelay;
  Position fastPosition;
  Position currentPosition;
  std::function<void ()>* dzn_out_p;
  ::IMoveDown p;
  ::ITimer timer;
  ::IDestinationSensor fastDestinationSensor;
  ::IDestinationSensor slowDestinationSensor;
  ::IPositionSensor positionSensor;
  ::IMotor motor;
  ::IPlanner planner;
  MoveDown (dzn::locator const& locator);
  private:
  void p_moveDown ();
  void p_abort ();
  void timer_timerElapsed ();
  void fastDestinationSensor_destinationReached ();
  void slowDestinationSensor_destinationReached ();
};
#endif // MOVEDOWN_HH
// version 2.18.2
