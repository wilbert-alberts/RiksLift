// Generated by dzn code from IPlanner.dzn
#include <dzn/runtime.hh>
namespace dzn
{
  struct locator;
  struct runtime;
}
#include <iostream>
#include <vector>
#include <map>
#ifndef IPLANNER_HH
#define IPLANNER_HH
struct IPlanner
{
  dzn::port::meta dzn_meta;
  struct
    {
      dzn::in::event<void (Position current, Delay d, Position p)> getMoveUpFastPlanning;
      dzn::in::event<void (Position current, Delay d, Position p)> getMoveUpSlowPlanning;
      dzn::in::event<void (Position current, Delay d, Position p)> getMoveDownFastPlanning;
      dzn::in::event<void (Position current, Delay d, Position p)> getMoveDownSlowPlanning;
      dzn::in::event<void (Position p)> setEndstopUpPosition;
      dzn::in::event<void (Position p)> setEndstopDownPosition;
    } in;
  struct
    {
    } out;
  bool dzn_share_p;
  char const* dzn_label;
  int dzn_state;
  IPlanner (dzn::port::meta const& m);
  template <typename Component>
  IPlanner (dzn::port::meta const& m, Component* that)
  : dzn_meta (m)
  , dzn_share_p (true)
  , dzn_label ("")
  , dzn_state ()
    {
      in.getMoveUpFastPlanning.set (that, this, "getMoveUpFastPlanning");
      in.getMoveUpSlowPlanning.set (that, this, "getMoveUpSlowPlanning");
      in.getMoveDownFastPlanning.set (that, this, "getMoveDownFastPlanning");
      in.getMoveDownSlowPlanning.set (that, this, "getMoveDownSlowPlanning");
      in.setEndstopUpPosition.set (that, this, "setEndstopUpPosition");
      in.setEndstopDownPosition.set (that, this, "setEndstopDownPosition");
    }
  virtual ~IPlanner ();
  void dzn_event (char const* event);
  void dzn_update_state (dzn::locator const& locator);
  void dzn_check_bindings ();
};
namespace dzn
{
  inline void connect (::IPlanner& provide, ::IPlanner& require)
    {
      require.in.getMoveUpFastPlanning = provide.in.getMoveUpFastPlanning;
      require.in.getMoveUpSlowPlanning = provide.in.getMoveUpSlowPlanning;
      require.in.getMoveDownFastPlanning = provide.in.getMoveDownFastPlanning;
      require.in.getMoveDownSlowPlanning = provide.in.getMoveDownSlowPlanning;
      require.in.setEndstopUpPosition = provide.in.setEndstopUpPosition;
      require.in.setEndstopDownPosition = provide.in.setEndstopDownPosition;
      provide.dzn_meta.require = require.dzn_meta.require;
      require.dzn_meta.provide = provide.dzn_meta.provide;
      provide.dzn_share_p = require.dzn_share_p = provide.dzn_share_p && require.dzn_share_p;
    }
}
#endif // IPLANNER_HH
// version 2.18.2
