import IMoveUpDown.dzn;
import IMoveUpDownRelaxed.dzn;
import ILog.dzn;

component MoveUpDownBottomArmor {
    provides IMoveUpDown p;
    requires IMoveUpDownRelaxed r;
    requires ILog rLog;

    behavior {
        enum State { IDLE, MOVING_UP, UP, MOVING_DOWN, DOWN, ABORTING };
        State state = State.IDLE;

        [ state.IDLE ] on p.moveUp(): { r.moveUp(); state = State.MOVING_UP; }
        [ state.IDLE ] on p.moveDown(): { r.moveDown(); state = State.MOVING_DOWN; }
        [ state.IDLE ] on r.moveFinished(): { rLog.logMsg($"WARNING: unexpected moveFinished seen in IDLE."$); }
        [ state.IDLE ] on r.moveAborted(): { rLog.logMsg($"WARNING: unexpected moveAborted seen in IDLE."$); }
        
        [ state.MOVING_UP ] on r.moveFinished(): { p.moveFinished(); state = State.UP; }
        [ state.MOVING_UP ] on p.abort(): { r.abort(); state = State.ABORTING; }
        [ state.MOVING_UP ] on r.moveAborted(): { rLog.logMsg($"WARNING: unexpected moveAborted seen in MOVING_UP."$); }

        [ state.MOVING_DOWN ] on r.moveFinished(): { p.moveFinished(); state = State.DOWN; }
        [ state.MOVING_DOWN ] on p.abort(): { r.abort(); state = State.ABORTING; }
        [ state.MOVING_DOWN ] on r.moveAborted(): { rLog.logMsg($"WARNING: unexpected moveAborted seen in MOVING_DOWN."$); }

        [ state.DOWN ] on p.moveUp(): { r.moveUp(); state = State.MOVING_UP; }
        [ state.DOWN ] on r.moveFinished(): { rLog.logMsg($"WARNING: unexpected moveFinished seen in DOWN."$); }
        [ state.DOWN ] on r.moveAborted(): { rLog.logMsg($"WARNING: unexpected moveAborted seen in DOWN."$); }

        [ state.UP ] on p.moveDown(): { r.moveDown(); state = State.MOVING_DOWN; }
        [ state.UP ] on r.moveFinished(): {  rLog.logMsg($"WARNING: unexpected moveFinished seen in UP."$); }
        [ state.UP ] on r.moveAborted(): { rLog.logMsg($"WARNING: unexpected moveAborted seen in UP."$);; }
        
        [ state.ABORTING ] on r.moveAborted(): { p.moveAborted(); state = State.IDLE; }
        [ state.ABORTING ] on r.moveFinished(): { rLog.logMsg($"WARNING: unexpected moveFinished seen in ABORTING."$); }
      
    }
}